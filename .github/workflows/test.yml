name: Test

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cfg:
          - { id: ubuntu-gcc, platform: ubuntu, cc: gcc, cpp: g++, setup_options: ""}
          - { id: ubuntu-gcc-sanitize, platform: ubuntu, cc: gcc, cpp: g++, setup_options: "-Db_sanitize=address,undefined"}
          - { id: ubuntu-clang, platform: ubuntu, cc: clang, cpp: clang++, setup_options: ""}
          - { id: rockylinux-gcc, platform: ubuntu, cc: gcc, cpp: g++, setup_options: ""}
          - { id: rockylinux-gcc-sanitize, platform: ubuntu, cc: gcc, cpp: g++, setup_options: "-Db_sanitize=address,undefined"}
          - { id: rockylinux-clang, platform: ubuntu, cc: clang, cpp: clang++, setup_options: ""}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ matrix.cfg.id }}
          file: tests/docker/${{ matrix.cfg.platform }}.Dockerfile
          build-args: |
            cc=${{ matrix.cfg.cc }}
            cxx=${{ matrix.cfg.cpp }}
            setup_options=${{ matrix.cfg.setup_options }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run tests
        run: |
          docker run ${{ matrix.cfg.id }} ninja -C builddir test
